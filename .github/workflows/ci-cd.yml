name: CI-CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_USERNAME }}
        run: |
          echo "$DOCKER_USERNAME" | docker login -u $DOCKER_PASSWORD --password-stdin

      - name: Get the commit number
        id: extract_version
        run: |
          version=$(git log -l --pretty=%B | grep |-oP 'version: \K.*')
          echo "::set-output name=version::${version}"

          

      - name: Build and push python-main-app
        run: |
          docker build -t $DOCKER_USERNAME/ci-cd-main:v${{ version }} .
          docker push $DOCKER_USERNAME/ci-cd-main:v${{ version }}

#      - name: Build and push Post-app
#        working-directory: ./post_app
#        run: |
#          docker build -t ${{ secrets.DOCKER_USERNAME }}/post-app:v${{ env.COMMIT_COUNT}} .
#          docker push ${{ secrets.DOCKER_USERNAME }}/post-app:v${{ env.COMMIT_COUNT}}
#
#      - name: Build and push Music-app
#        working-directory: ./music_app
#        run: |
#          docker build -t ${{ secrets.DOCKER_USERNAME }}/music-app:v${{ env.COMMIT_COUNT}} .
#          docker push ${{ secrets.DOCKER_USERNAME }}/music-app:v${{ env.COMMIT_COUNT}}
#
#      - name: Build and push Document-app
#        working-directory: ./document_app
#        run: |
#          docker build -t ${{ secrets.DOCKER_USERNAME }}/document-app:v${{ env.COMMIT_COUNT}} .
#          docker push ${{ secrets.DOCKER_USERNAME }}/document-app:v${{ env.COMMIT_COUNT}}

#  deploy:
#    runs-on: ubuntu-latest
#    needs: build
#
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v2
#
#      - name: SSH into server and deploy
#        uses: appleboy/ssh-action@v0.4.0
#        with:
#          host: ${{ secret.SERVER_USERNAME }}
#          key: ${{ secret.SERVER_SSH_KEY }}
#          script: |
#            # Pull the latest changes from the repository.
#            git pull
#            # Run Docker Compose
#            docker compose down && docker compose up -d



